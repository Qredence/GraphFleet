export declare function generatePromptFooConfiguration(script: PromptScript, options?: {
    provider?: string;
    testProvider?: string;
    out?: string;
    cli?: string;
    models?: ModelOptions[];
}): {
    description: string;
    prompts: string[];
    providers: {
        id: string;
        label: string;
        config: {
            model: string;
            temperature: number;
            top_p: number;
            cli: string;
        };
    }[];
    defaultTest: {
        options: {
            provider: {
                text: {
                    id: string;
                    config: {
                        apiHost: string;
                    };
                };
                embedding: {
                    id: string;
                    config: {
                        apiHost: string;
                    };
                };
            };
        };
    };
    tests: {
        description: string;
        vars: Record<string, any>;
        assert: ({
            type: string;
            value: string;
            transform: string;
        } | {
            transform: string;
            weight?: number;
            type: "contains-all" | "not-contains-all" | "contains-any" | "not-contains-any" | "icontains-all" | "not-icontains-all";
            value: string[];
        })[];
    }[];
};
//# sourceMappingURL=test.d.ts.map