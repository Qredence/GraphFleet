import { LanguageModel } from "./chat";
import { LanguageModelConfiguration } from "./host";
import { AbortSignalOptions, TraceOptions } from "./trace";
export declare function resolveLanguageModel(options: {
    model?: string;
    languageModel?: LanguageModel;
}, configuration: LanguageModelConfiguration): LanguageModel;
/**
 * model
 * provider:model
 * provider:model:tag where modelId model:tag
 */
export declare function parseModelIdentifier(id: string): {
    provider: string;
    model: string;
    tag: string;
    modelId: string;
} | {
    provider: string;
    model: string;
    modelId: string;
    tag?: undefined;
};
export interface ModelConnectionInfo extends ModelConnectionOptions, Partial<LanguageModelConfiguration> {
    error?: string;
    model: string;
}
export declare function resolveModelConnectionInfo(conn: ModelConnectionOptions, options?: {
    model?: string;
    token?: boolean;
} & TraceOptions & AbortSignalOptions): Promise<{
    info: ModelConnectionInfo;
    configuration?: LanguageModelConfiguration;
}>;
//# sourceMappingURL=models.d.ts.map