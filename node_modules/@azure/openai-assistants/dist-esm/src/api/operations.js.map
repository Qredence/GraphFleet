{"version":3,"file":"operations.js","sourceRoot":"","sources":["../../../src/api/operations.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * THIS IS AN AUTO-GENERATED FILE - DO NOT EDIT!\n *\n * Any changes you make here may be lost.\n *\n * If you need to make changes, please do so in the original source file, \\{project-root\\}/sources/custom\n */\n\nimport {\n  StreamableMethod,\n  createRestError,\n  operationOptionsToRequestParameters,\n} from \"@azure-rest/core-client\";\nimport { createFile } from \"@azure/core-rest-pipeline\";\nimport { parseToolCallOutput, parseRequiredToolCallOutput } from \"../models/helpers.js\";\nimport {\n  Assistant,\n  AssistantFile,\n  CreateThreadOptions,\n  FilePurpose,\n  GetMessageOptions,\n  InputFile,\n  ListAssistantFilesOptions,\n  ListAssistantsOptions,\n  ListMessageFilesOptions,\n  ListMessagesOptions,\n  ListRunStepsOptions,\n  ListRunsOptions,\n  MessageFile,\n  RunStep,\n  RunStepDetails,\n  ToolCall,\n  UploadFileOptions,\n} from \"../models/index.js\";\nimport {\n  AssistantCreationOptions,\n  AssistantDeletionStatus,\n  AssistantFileDeletionStatus,\n  AssistantThread,\n  CreateAndRunThreadOptions,\n  CreateRunOptions,\n  FileDeletionStatus,\n  FileListResponse,\n  ListResponseOf,\n  MessageContent,\n  MessageRole,\n  ThreadDeletionStatus,\n  ThreadMessage,\n  ThreadRun,\n  ToolOutput,\n  UpdateAssistantOptions,\n} from \"../models/models.js\";\nimport {\n  CancelRunOptions,\n  CreateAssistantFileOptions,\n  CreateAssistantOptions,\n  CreateMessageOptions,\n  CreateRunRequestOptions,\n  CreateThreadAndRunOptions,\n  DeleteAssistantFileOptions,\n  DeleteAssistantOptions,\n  DeleteFileOptions,\n  DeleteThreadOptions,\n  GetAssistantFileOptions,\n  GetAssistantOptions,\n  GetFileOptions,\n  GetMessageFileOptions,\n  GetRunOptions,\n  GetRunStepOptions,\n  GetThreadOptions,\n  ListFilesOptions,\n  SubmitToolOutputsToRunOptions,\n  UpdateAssistantRequestOptions,\n  UpdateMessageOptions,\n  UpdateRunOptions,\n  UpdateThreadOptions,\n} from \"../models/options.js\";\nimport {\n  AssistantThreadCreationOptions,\n  CancelRun200Response,\n  AssistantsContext as Client,\n  CreateAssistant200Response,\n  CreateAssistantFile200Response,\n  CreateMessage200Response,\n  CreateRun200Response,\n  CreateThread200Response,\n  CreateThreadAndRun200Response,\n  DeleteAssistant200Response,\n  DeleteAssistantFile200Response,\n  DeleteFile200Response,\n  DeleteThread200Response,\n  GetAssistant200Response,\n  GetAssistantFile200Response,\n  GetFile200Response,\n  GetMessage200Response,\n  GetMessageFile200Response,\n  GetRun200Response,\n  GetRunStep200Response,\n  GetThread200Response,\n  ListAssistantFiles200Response,\n  ListAssistants200Response,\n  ListFiles200Response,\n  ListMessageFiles200Response,\n  ListMessages200Response,\n  ListRuns200Response,\n  RunStepDetailsOutput,\n  RunStepOutput,\n  SubmitToolOutputsToRun200Response,\n  UpdateAssistant200Response,\n  UpdateMessage200Response,\n  UpdateRun200Response,\n  UpdateThread200Response,\n  UploadFile200Response,\n} from \"../rest/index.js\";\nimport { MessageContentOutput } from \"../rest/outputModels.js\";\nimport { ListRunSteps200Response } from \"../rest/responses.js\";\nimport { camelCaseKeys, unixToDate } from \"./util.js\";\n\nexport function _createAssistantSend(\n  context: Client,\n  body: AssistantCreationOptions,\n  options: CreateAssistantOptions = { requestOptions: {} }\n): StreamableMethod<CreateAssistant200Response> {\n  return context.path(\"/assistants\").post({\n    ...operationOptionsToRequestParameters(options),\n    body: {\n      model: body[\"model\"],\n      name: body[\"name\"],\n      description: body[\"description\"],\n      instructions: body[\"instructions\"],\n      tools: body[\"tools\"],\n      file_ids: body[\"fileIds\"],\n      metadata: body[\"metadata\"],\n    },\n  });\n}\n\nexport async function _createAssistantDeserialize(\n  result: CreateAssistant200Response\n): Promise<Assistant> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    name: result.body[\"name\"],\n    description: result.body[\"description\"],\n    model: result.body[\"model\"],\n    instructions: result.body[\"instructions\"],\n    tools: result.body[\"tools\"],\n    fileIds: result.body[\"file_ids\"],\n    metadata: result.body[\"metadata\"],\n  };\n}\n\n/** Creates a new assistant. */\nexport async function createAssistant(\n  context: Client,\n  body: AssistantCreationOptions,\n  options: CreateAssistantOptions = { requestOptions: {} }\n): Promise<Assistant> {\n  const result = await _createAssistantSend(context, body, options);\n  return _createAssistantDeserialize(result);\n}\n\nexport function _listAssistantsSend(\n  context: Client,\n  options: ListAssistantsOptions = { requestOptions: {} }\n): StreamableMethod<ListAssistants200Response> {\n  return context.path(\"/assistants\").get({\n    ...operationOptionsToRequestParameters(options),\n    queryParameters: {\n      limit: options?.limit,\n      order: options?.order,\n      after: options?.after,\n      before: options?.before,\n    },\n  });\n}\n\nexport function _getAssistantSend(\n  context: Client,\n  assistantId: string,\n  options: GetAssistantOptions = { requestOptions: {} }\n): StreamableMethod<GetAssistant200Response> {\n  return context\n    .path(\"/assistants/{assistantId}\", assistantId)\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _getAssistantDeserialize(\n  result: GetAssistant200Response\n): Promise<Assistant> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    name: result.body[\"name\"],\n    description: result.body[\"description\"],\n    model: result.body[\"model\"],\n    instructions: result.body[\"instructions\"],\n    tools: result.body[\"tools\"],\n    fileIds: result.body[\"file_ids\"],\n    metadata: result.body[\"metadata\"],\n  };\n}\n\n/** Retrieves an existing assistant. */\nexport async function getAssistant(\n  context: Client,\n  assistantId: string,\n  options: GetAssistantOptions = { requestOptions: {} }\n): Promise<Assistant> {\n  const result = await _getAssistantSend(context, assistantId, options);\n  return _getAssistantDeserialize(result);\n}\n\nexport function _updateAssistantSend(\n  context: Client,\n  assistantId: string,\n  body: UpdateAssistantOptions,\n  options: UpdateAssistantRequestOptions = { requestOptions: {} }\n): StreamableMethod<UpdateAssistant200Response> {\n  return context.path(\"/assistants/{assistantId}\", assistantId).post({\n    ...operationOptionsToRequestParameters(options),\n    body: {\n      model: body[\"model\"],\n      name: body[\"name\"],\n      description: body[\"description\"],\n      instructions: body[\"instructions\"],\n      tools: body[\"tools\"],\n      file_ids: body[\"fileIds\"],\n      metadata: body[\"metadata\"],\n    },\n  });\n}\n\nexport async function _updateAssistantDeserialize(\n  result: UpdateAssistant200Response\n): Promise<Assistant> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    name: result.body[\"name\"],\n    description: result.body[\"description\"],\n    model: result.body[\"model\"],\n    instructions: result.body[\"instructions\"],\n    tools: result.body[\"tools\"],\n    fileIds: result.body[\"file_ids\"],\n    metadata: result.body[\"metadata\"],\n  };\n}\n\n/** Modifies an existing assistant. */\nexport async function updateAssistant(\n  context: Client,\n  assistantId: string,\n  body: UpdateAssistantOptions,\n  options: UpdateAssistantRequestOptions = { requestOptions: {} }\n): Promise<Assistant> {\n  const result = await _updateAssistantSend(context, assistantId, body, options);\n  return _updateAssistantDeserialize(result);\n}\n\nexport function _deleteAssistantSend(\n  context: Client,\n  assistantId: string,\n  options: DeleteAssistantOptions = { requestOptions: {} }\n): StreamableMethod<DeleteAssistant200Response> {\n  return context\n    .path(\"/assistants/{assistantId}\", assistantId)\n    .delete({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _deleteAssistantDeserialize(\n  result: DeleteAssistant200Response\n): Promise<AssistantDeletionStatus> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    deleted: result.body[\"deleted\"],\n  };\n}\n\n/** Deletes an assistant. */\nexport async function deleteAssistant(\n  context: Client,\n  assistantId: string,\n  options: DeleteAssistantOptions = { requestOptions: {} }\n): Promise<AssistantDeletionStatus> {\n  const result = await _deleteAssistantSend(context, assistantId, options);\n  return _deleteAssistantDeserialize(result);\n}\n\nexport function _createAssistantFileSend(\n  context: Client,\n  assistantId: string,\n  fileId: string,\n  options: CreateAssistantFileOptions = { requestOptions: {} }\n): StreamableMethod<CreateAssistantFile200Response> {\n  return context.path(\"/assistants/{assistantId}/files\", assistantId).post({\n    ...operationOptionsToRequestParameters(options),\n    body: { file_id: fileId },\n  });\n}\n\nexport async function _createAssistantFileDeserialize(\n  result: CreateAssistantFile200Response\n): Promise<AssistantFile> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    assistantId: result.body[\"assistant_id\"],\n  };\n}\n\n/** Attaches a previously uploaded file to an assistant for use by tools that can read files. */\nexport async function createAssistantFile(\n  context: Client,\n  assistantId: string,\n  fileId: string,\n  options: CreateAssistantFileOptions = { requestOptions: {} }\n): Promise<AssistantFile> {\n  const result = await _createAssistantFileSend(context, assistantId, fileId, options);\n  return _createAssistantFileDeserialize(result);\n}\n\nexport function _listAssistantFilesSend(\n  context: Client,\n  assistantId: string,\n  options: ListAssistantFilesOptions = { requestOptions: {} }\n): StreamableMethod<ListAssistantFiles200Response> {\n  return context.path(\"/assistants/{assistantId}/files\", assistantId).get({\n    ...operationOptionsToRequestParameters(options),\n    queryParameters: {\n      limit: options?.limit,\n      order: options?.order,\n      after: options?.after,\n      before: options?.before,\n    },\n  });\n}\n\nexport function _getAssistantFileSend(\n  context: Client,\n  assistantId: string,\n  fileId: string,\n  options: GetAssistantFileOptions = { requestOptions: {} }\n): StreamableMethod<GetAssistantFile200Response> {\n  return context\n    .path(\"/assistants/{assistantId}/files/{fileId}\", assistantId, fileId)\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _getAssistantFileDeserialize(\n  result: GetAssistantFile200Response\n): Promise<AssistantFile> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    assistantId: result.body[\"assistant_id\"],\n  };\n}\n\n/** Retrieves a file attached to an assistant. */\nexport async function getAssistantFile(\n  context: Client,\n  assistantId: string,\n  fileId: string,\n  options: GetAssistantFileOptions = { requestOptions: {} }\n): Promise<AssistantFile> {\n  const result = await _getAssistantFileSend(context, assistantId, fileId, options);\n  return _getAssistantFileDeserialize(result);\n}\n\nexport function _deleteAssistantFileSend(\n  context: Client,\n  assistantId: string,\n  fileId: string,\n  options: DeleteAssistantFileOptions = { requestOptions: {} }\n): StreamableMethod<DeleteAssistantFile200Response> {\n  return context\n    .path(\"/assistants/{assistantId}/files/{fileId}\", assistantId, fileId)\n    .delete({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _deleteAssistantFileDeserialize(\n  result: DeleteAssistantFile200Response\n): Promise<AssistantFileDeletionStatus> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    deleted: result.body[\"deleted\"],\n  };\n}\n\n/**\n * Unlinks a previously attached file from an assistant, rendering it unavailable for use by tools that can read\n * files.\n */\nexport async function deleteAssistantFile(\n  context: Client,\n  assistantId: string,\n  fileId: string,\n  options: DeleteAssistantFileOptions = { requestOptions: {} }\n): Promise<AssistantFileDeletionStatus> {\n  const result = await _deleteAssistantFileSend(context, assistantId, fileId, options);\n  return _deleteAssistantFileDeserialize(result);\n}\n\nexport async function _createThreadDeserialize(\n  result: CreateThread200Response\n): Promise<AssistantThread> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    metadata: result.body[\"metadata\"],\n  };\n}\n\n/** Creates a new thread. Threads contain messages and can be run by assistants. */\nexport async function createThread(\n  context: Client,\n  body: AssistantThreadCreationOptions,\n  options: CreateThreadOptions = { requestOptions: {} }\n): Promise<AssistantThread> {\n  const result = await _createThreadSend(context, body, options);\n  return _createThreadDeserialize(result);\n}\n\nexport function _getThreadSend(\n  context: Client,\n  threadId: string,\n  options: GetThreadOptions = { requestOptions: {} }\n): StreamableMethod<GetThread200Response> {\n  return context\n    .path(\"/threads/{threadId}\", threadId)\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _getThreadDeserialize(\n  result: GetThread200Response\n): Promise<AssistantThread> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    metadata: result.body[\"metadata\"],\n  };\n}\n\n/** Gets information about an existing thread. */\nexport async function getThread(\n  context: Client,\n  threadId: string,\n  options: GetThreadOptions = { requestOptions: {} }\n): Promise<AssistantThread> {\n  const result = await _getThreadSend(context, threadId, options);\n  return _getThreadDeserialize(result);\n}\n\nexport function _updateThreadSend(\n  context: Client,\n  threadId: string,\n  options: UpdateThreadOptions = { requestOptions: {} }\n): StreamableMethod<UpdateThread200Response> {\n  return context.path(\"/threads/{threadId}\", threadId).post({\n    ...operationOptionsToRequestParameters(options),\n    body: { metadata: options?.metadata },\n  });\n}\n\nexport async function _updateThreadDeserialize(\n  result: UpdateThread200Response\n): Promise<AssistantThread> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    metadata: result.body[\"metadata\"],\n  };\n}\n\n/** Modifies an existing thread. */\nexport async function updateThread(\n  context: Client,\n  threadId: string,\n  options: UpdateThreadOptions = { requestOptions: {} }\n): Promise<AssistantThread> {\n  const result = await _updateThreadSend(context, threadId, options);\n  return _updateThreadDeserialize(result);\n}\n\nexport function _deleteThreadSend(\n  context: Client,\n  threadId: string,\n  options: DeleteThreadOptions = { requestOptions: {} }\n): StreamableMethod<DeleteThread200Response> {\n  return context\n    .path(\"/threads/{threadId}\", threadId)\n    .delete({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _deleteThreadDeserialize(\n  result: DeleteThread200Response\n): Promise<ThreadDeletionStatus> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    deleted: result.body[\"deleted\"],\n  };\n}\n\n/** Deletes an existing thread. */\nexport async function deleteThread(\n  context: Client,\n  threadId: string,\n  options: DeleteThreadOptions = { requestOptions: {} }\n): Promise<ThreadDeletionStatus> {\n  const result = await _deleteThreadSend(context, threadId, options);\n  return _deleteThreadDeserialize(result);\n}\n\nexport function _createMessageSend(\n  context: Client,\n  threadId: string,\n  role: MessageRole,\n  content: string,\n  options: CreateMessageOptions = { requestOptions: {} }\n): StreamableMethod<CreateMessage200Response> {\n  return context.path(\"/threads/{threadId}/messages\", threadId).post({\n    ...operationOptionsToRequestParameters(options),\n    body: {\n      role: role,\n      content: content,\n      file_ids: options?.fileIds,\n      metadata: options?.metadata,\n    },\n  });\n}\n\n/** Creates a new message on a specified thread. */\nexport async function createMessage(\n  context: Client,\n  threadId: string,\n  role: MessageRole,\n  content: string,\n  options: CreateMessageOptions = { requestOptions: {} }\n): Promise<ThreadMessage> {\n  const result = await _createMessageSend(context, threadId, role, content, options);\n  return _createMessageDeserialize(result);\n}\n\nexport function _listMessagesSend(\n  context: Client,\n  threadId: string,\n  options: ListMessagesOptions = { requestOptions: {} }\n): StreamableMethod<ListMessages200Response> {\n  return context.path(\"/threads/{threadId}/messages\", threadId).get({\n    ...operationOptionsToRequestParameters(options),\n    queryParameters: {\n      limit: options?.limit,\n      order: options?.order,\n      after: options?.after,\n      before: options?.before,\n    },\n  });\n}\n\nexport function _updateMessageSend(\n  context: Client,\n  threadId: string,\n  messageId: string,\n  options: UpdateMessageOptions = { requestOptions: {} }\n): StreamableMethod<UpdateMessage200Response> {\n  return context.path(\"/threads/{threadId}/messages/{messageId}\", threadId, messageId).post({\n    ...operationOptionsToRequestParameters(options),\n    body: { metadata: options?.metadata },\n  });\n}\n\n/** Modifies an existing message on an existing thread. */\nexport async function updateMessage(\n  context: Client,\n  threadId: string,\n  messageId: string,\n  options: UpdateMessageOptions = { requestOptions: {} }\n): Promise<ThreadMessage> {\n  const result = await _updateMessageSend(context, threadId, messageId, options);\n  return _updateMessageDeserialize(result);\n}\n\nexport function _listMessageFilesSend(\n  context: Client,\n  threadId: string,\n  messageId: string,\n  options: ListMessageFilesOptions = { requestOptions: {} }\n): StreamableMethod<ListMessageFiles200Response> {\n  return context.path(\"/threads/{threadId}/messages/{messageId}/files\", threadId, messageId).get({\n    ...operationOptionsToRequestParameters(options),\n    queryParameters: {\n      limit: options?.limit,\n      order: options?.order,\n      after: options?.after,\n      before: options?.before,\n    },\n  });\n}\n\nexport function _getMessageFileSend(\n  context: Client,\n  threadId: string,\n  messageId: string,\n  fileId: string,\n  options: GetMessageFileOptions = { requestOptions: {} }\n): StreamableMethod<GetMessageFile200Response> {\n  return context\n    .path(\"/threads/{threadId}/messages/{messageId}/files/{fileId}\", threadId, messageId, fileId)\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _getMessageFileDeserialize(\n  result: GetMessageFile200Response\n): Promise<MessageFile> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    messageId: result.body[\"message_id\"],\n  };\n}\n\n/** Gets information about a file attachment to a message within a thread. */\nexport async function getMessageFile(\n  context: Client,\n  threadId: string,\n  messageId: string,\n  fileId: string,\n  options: GetMessageFileOptions = { requestOptions: {} }\n): Promise<MessageFile> {\n  const result = await _getMessageFileSend(context, threadId, messageId, fileId, options);\n  return _getMessageFileDeserialize(result);\n}\n\nexport function _createRunSend(\n  context: Client,\n  threadId: string,\n  createRunOptions: CreateRunOptions,\n  options: CreateRunRequestOptions = { requestOptions: {} }\n): StreamableMethod<CreateRun200Response> {\n  return context.path(\"/threads/{threadId}/runs\", threadId).post({\n    ...operationOptionsToRequestParameters(options),\n    body: {\n      assistant_id: createRunOptions[\"assistantId\"],\n      model: createRunOptions[\"model\"],\n      instructions: createRunOptions[\"instructions\"],\n      additional_instructions: createRunOptions[\"additionalInstructions\"],\n      tools: createRunOptions[\"tools\"],\n      metadata: createRunOptions[\"metadata\"],\n    },\n  });\n}\n\n/** Creates a new run for an assistant thread. */\nexport async function createRun(\n  context: Client,\n  threadId: string,\n  createRunOptions: CreateRunOptions,\n  options: CreateRunRequestOptions = { requestOptions: {} }\n): Promise<ThreadRun> {\n  const result = await _createRunSend(context, threadId, createRunOptions, options);\n  return _createRunDeserialize(result);\n}\n\nexport function _listRunsSend(\n  context: Client,\n  threadId: string,\n  options: ListRunsOptions = { requestOptions: {} }\n): StreamableMethod<ListRuns200Response> {\n  return context.path(\"/threads/{threadId}/runs\", threadId).get({\n    ...operationOptionsToRequestParameters(options),\n    queryParameters: {\n      limit: options?.limit,\n      order: options?.order,\n      after: options?.after,\n      before: options?.before,\n    },\n  });\n}\n\nexport function _getRunSend(\n  context: Client,\n  threadId: string,\n  runId: string,\n  options: GetRunOptions = { requestOptions: {} }\n): StreamableMethod<GetRun200Response> {\n  return context\n    .path(\"/threads/{threadId}/runs/{runId}\", threadId, runId)\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\n/** Gets an existing run from an existing thread. */\nexport async function getRun(\n  context: Client,\n  threadId: string,\n  runId: string,\n  options: GetRunOptions = { requestOptions: {} }\n): Promise<ThreadRun> {\n  const result = await _getRunSend(context, threadId, runId, options);\n  return _getRunDeserialize(result);\n}\n\nexport function _updateRunSend(\n  context: Client,\n  threadId: string,\n  runId: string,\n  options: UpdateRunOptions = { requestOptions: {} }\n): StreamableMethod<UpdateRun200Response> {\n  return context.path(\"/threads/{threadId}/runs/{runId}\", threadId, runId).post({\n    ...operationOptionsToRequestParameters(options),\n    body: { metadata: options?.metadata },\n  });\n}\n\nexport async function _updateRunDeserialize(result: UpdateRun200Response): Promise<ThreadRun> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    threadId: result.body[\"thread_id\"],\n    assistantId: result.body[\"assistant_id\"],\n    status: result.body[\"status\"],\n    requiredAction: result.body.required_action,\n    lastError: result.body.last_error,\n    model: result.body[\"model\"],\n    instructions: result.body[\"instructions\"],\n    tools: result.body[\"tools\"],\n    fileIds: result.body[\"file_ids\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    expiresAt:\n      result.body[\"expires_at\"] === null ? null : unixToDate(Number(result.body[\"expires_at\"])),\n    startedAt:\n      result.body[\"started_at\"] === null ? null : unixToDate(Number(result.body[\"started_at\"])),\n    completedAt:\n      result.body[\"completed_at\"] === null ? null : unixToDate(Number(result.body[\"completed_at\"])),\n    cancelledAt:\n      result.body[\"cancelled_at\"] === null ? null : unixToDate(Number(result.body[\"cancelled_at\"])),\n    failedAt:\n      result.body[\"failed_at\"] === null ? null : unixToDate(Number(result.body[\"failed_at\"])),\n    metadata: result.body[\"metadata\"],\n  };\n}\n\n/** Modifies an existing thread run. */\nexport async function updateRun(\n  context: Client,\n  threadId: string,\n  runId: string,\n  options: UpdateRunOptions = { requestOptions: {} }\n): Promise<ThreadRun> {\n  const result = await _updateRunSend(context, threadId, runId, options);\n  return _updateRunDeserialize(result);\n}\n\nexport function _submitToolOutputsToRunSend(\n  context: Client,\n  threadId: string,\n  runId: string,\n  toolOutputs: ToolOutput[],\n  options: SubmitToolOutputsToRunOptions = { requestOptions: {} }\n): StreamableMethod<SubmitToolOutputsToRun200Response> {\n  return context\n    .path(\"/threads/{threadId}/runs/{runId}/submit_tool_outputs\", threadId, runId)\n    .post({\n      ...operationOptionsToRequestParameters(options),\n      body: {\n        tool_outputs: toolOutputs.map((p) => ({\n          tool_call_id: p[\"toolCallId\"],\n          output: p[\"output\"],\n        })),\n      },\n    });\n}\n\n/** Submits outputs from tools as requested by tool calls in a run. Runs that need submitted tool outputs will have a status of 'requires_action' with a required_action.type of 'submit_tool_outputs'. */\nexport async function submitToolOutputsToRun(\n  context: Client,\n  threadId: string,\n  runId: string,\n  toolOutputs: ToolOutput[],\n  options: SubmitToolOutputsToRunOptions = { requestOptions: {} }\n): Promise<ThreadRun> {\n  const result = await _submitToolOutputsToRunSend(context, threadId, runId, toolOutputs, options);\n  return _submitToolOutputsToRunDeserialize(result);\n}\n\nexport function _cancelRunSend(\n  context: Client,\n  threadId: string,\n  runId: string,\n  options: CancelRunOptions = { requestOptions: {} }\n): StreamableMethod<CancelRun200Response> {\n  return context\n    .path(\"/threads/{threadId}/runs/{runId}/cancel\", threadId, runId)\n    .post({ ...operationOptionsToRequestParameters(options) });\n}\n\n/** Cancels a run of an in progress thread. */\nexport async function cancelRun(\n  context: Client,\n  threadId: string,\n  runId: string,\n  options: CancelRunOptions = { requestOptions: {} }\n): Promise<ThreadRun> {\n  const result = await _cancelRunSend(context, threadId, runId, options);\n  return _cancelRunDeserialize(result);\n}\n\n/** Creates a new assistant thread and immediately starts a run using that new thread. */\nexport async function createThreadAndRun(\n  context: Client,\n  body: CreateAndRunThreadOptions,\n  options: CreateThreadAndRunOptions = { requestOptions: {} }\n): Promise<ThreadRun> {\n  const result = await _createThreadAndRunSend(context, body, options);\n  return _createThreadAndRunDeserialize(result);\n}\n\nexport function _getRunStepSend(\n  context: Client,\n  threadId: string,\n  runId: string,\n  stepId: string,\n  options: GetRunStepOptions = { requestOptions: {} }\n): StreamableMethod<GetRunStep200Response> {\n  return context\n    .path(\"/threads/{threadId}/runs/{runId}/steps/{stepId}\", threadId, runId, stepId)\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\n/** Gets a single run step from a thread run. */\nexport async function getRunStep(\n  context: Client,\n  threadId: string,\n  runId: string,\n  stepId: string,\n  options: GetRunStepOptions = { requestOptions: {} }\n): Promise<RunStep> {\n  const result = await _getRunStepSend(context, threadId, runId, stepId, options);\n  return _getRunStepDeserialize(result);\n}\n\nexport function _listRunStepsSend(\n  context: Client,\n  threadId: string,\n  runId: string,\n  options: ListRunStepsOptions = { requestOptions: {} }\n): StreamableMethod<ListRunSteps200Response> {\n  return context.path(\"/threads/{threadId}/runs/{runId}/steps\", threadId, runId).get({\n    ...operationOptionsToRequestParameters(options),\n    queryParameters: {\n      limit: options?.limit,\n      order: options?.order,\n      after: options?.after,\n      before: options?.before,\n    },\n  });\n}\n\nexport function _listFilesSend(\n  context: Client,\n  options: ListFilesOptions = { requestOptions: {} }\n): StreamableMethod<ListFiles200Response> {\n  return context.path(\"/files\").get({\n    ...operationOptionsToRequestParameters(options),\n    queryParameters: { purpose: options?.purpose },\n  });\n}\n\nexport async function _listFilesDeserialize(\n  result: ListFiles200Response\n): Promise<FileListResponse> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    data: result.body[\"data\"].map((p) => ({\n      id: p[\"id\"],\n      bytes: p[\"bytes\"],\n      filename: p[\"filename\"],\n      createdAt: unixToDate(p[\"created_at\"]),\n      purpose: p[\"purpose\"],\n    })),\n  };\n}\n\n/** Gets a list of previously uploaded files. */\nexport async function listFiles(\n  context: Client,\n  options: ListFilesOptions = { requestOptions: {} }\n): Promise<FileListResponse> {\n  const result = await _listFilesSend(context, options);\n  return _listFilesDeserialize(result);\n}\n\n/** Uploads a file for use by other operations. */\nexport async function uploadFile(\n  context: Client,\n  file: Uint8Array,\n  purpose: FilePurpose,\n  options: UploadFileOptions = { requestOptions: {} }\n): Promise<InputFile> {\n  const result = await _uploadFileSend(context, file, purpose, options);\n  return _uploadFileDeserialize(result);\n}\n\nexport function _deleteFileSend(\n  context: Client,\n  fileId: string,\n  options: DeleteFileOptions = { requestOptions: {} }\n): StreamableMethod<DeleteFile200Response> {\n  return context\n    .path(\"/files/{fileId}\", fileId)\n    .delete({ ...operationOptionsToRequestParameters(options) });\n}\n\nexport async function _deleteFileDeserialize(\n  result: DeleteFile200Response\n): Promise<FileDeletionStatus> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    deleted: result.body[\"deleted\"],\n  };\n}\n\n/** Delete a previously uploaded file. */\nexport async function deleteFile(\n  context: Client,\n  fileId: string,\n  options: DeleteFileOptions = { requestOptions: {} }\n): Promise<FileDeletionStatus> {\n  const result = await _deleteFileSend(context, fileId, options);\n  return _deleteFileDeserialize(result);\n}\n\nexport function _getFileSend(\n  context: Client,\n  fileId: string,\n  options: GetFileOptions = { requestOptions: {} }\n): StreamableMethod<GetFile200Response> {\n  return context\n    .path(\"/files/{fileId}\", fileId)\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\n/** Returns information about a specific file. Does not retrieve file content. */\nexport async function getFile(\n  context: Client,\n  fileId: string,\n  options: GetFileOptions = { requestOptions: {} }\n): Promise<InputFile> {\n  const result = await _getFileSend(context, fileId, options);\n  return _getFileDeserialize(result);\n}\n\nexport async function _createRunDeserialize(result: CreateRun200Response): Promise<ThreadRun> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  const {\n    required_action,\n    last_error,\n    created_at,\n    expires_at,\n    started_at,\n    completed_at,\n    cancelled_at,\n    failed_at,\n    ...rest\n  } = result.body;\n  return {\n    ...camelCaseKeys(rest),\n    requiredAction: !required_action\n      ? undefined\n      : {\n          type: required_action?.[\"type\"],\n          submitToolOutputs: !required_action?.submit_tool_outputs?.[\"tool_calls\"]\n            ? undefined\n            : {\n                toolCalls: required_action?.submit_tool_outputs?.tool_calls?.map(\n                  parseRequiredToolCallOutput\n                ),\n              },\n        },\n    lastError: !last_error\n      ? undefined\n      : {\n          code: last_error?.[\"code\"],\n          message: last_error?.[\"message\"],\n        },\n    createdAt: unixToDate(created_at),\n    expiresAt: expires_at === null ? null : unixToDate(Number(expires_at)),\n    startedAt: started_at === null ? null : unixToDate(Number(started_at)),\n    completedAt: completed_at === null ? null : unixToDate(Number(completed_at)),\n    cancelledAt: cancelled_at === null ? null : unixToDate(Number(cancelled_at)),\n    failedAt: failed_at === null ? null : unixToDate(Number(failed_at)),\n  };\n}\n\nexport async function _listRunsDeserialize(\n  result: ListRuns200Response\n): Promise<ListResponseOf<ThreadRun>> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    data: result.body[\"data\"].map(\n      (p) =>\n        ({\n          id: p[\"id\"],\n          threadId: p[\"thread_id\"],\n          assistantId: p[\"assistant_id\"],\n          status: p[\"status\"],\n          requiredAction: !p.required_action ? undefined : { type: p.required_action?.[\"type\"] },\n          lastError: !p.last_error\n            ? undefined\n            : { code: p.last_error?.[\"code\"], message: p.last_error?.[\"message\"] },\n          model: p[\"model\"],\n          instructions: p[\"instructions\"],\n          tools: p[\"tools\"],\n          fileIds: p[\"file_ids\"],\n          metadata: p[\"metadata\"],\n          createdAt: unixToDate(p[\"created_at\"]),\n          expiresAt: p[\"expires_at\"] === null ? null : unixToDate(Number(p[\"expires_at\"])),\n          startedAt: p[\"started_at\"] === null ? null : unixToDate(Number(p[\"started_at\"])),\n          completedAt: p[\"completed_at\"] === null ? null : unixToDate(Number(p[\"completed_at\"])),\n          cancelledAt: p[\"cancelled_at\"] === null ? null : unixToDate(Number(p[\"cancelled_at\"])),\n          failedAt: p[\"failed_at\"] === null ? null : unixToDate(Number(p[\"failed_at\"])),\n        } as ThreadRun)\n    ),\n    firstId: result.body[\"first_id\"],\n    lastId: result.body[\"last_id\"],\n    hasMore: result.body[\"has_more\"],\n  };\n}\n\nexport function _createThreadAndRunSend(\n  context: Client,\n  body: CreateAndRunThreadOptions,\n  options: CreateThreadAndRunOptions = { requestOptions: {} }\n): StreamableMethod<CreateThreadAndRun200Response> {\n  return context.path(\"/threads/runs\").post({\n    ...operationOptionsToRequestParameters(options),\n    body: {\n      assistant_id: body[\"assistantId\"],\n      thread: !body.thread\n        ? undefined\n        : {\n            messages: !body.thread?.[\"messages\"]\n              ? body.thread?.[\"messages\"]\n              : body.thread?.[\"messages\"].map((p) => ({\n                  role: p[\"role\"],\n                  content: p[\"content\"],\n                })),\n            metadata: body.thread?.[\"metadata\"],\n          },\n      model: body[\"model\"],\n      instructions: body[\"instructions\"],\n      tools: body[\"tools\"],\n      metadata: body[\"metadata\"],\n    },\n  });\n}\n\n/** Returns a list of runs associated with an assistant thread. */\nexport async function listRuns(\n  context: Client,\n  threadId: string,\n  options: ListRunsOptions = { requestOptions: {} }\n): Promise<ListResponseOf<ThreadRun>> {\n  const result = await _listRunsSend(context, threadId, options);\n  return _listRunsDeserialize(result);\n}\n\nexport async function _getRunDeserialize(result: GetRun200Response): Promise<ThreadRun> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    threadId: result.body[\"thread_id\"],\n    assistantId: result.body[\"assistant_id\"],\n    status: result.body[\"status\"],\n    requiredAction: !result.body.required_action\n      ? undefined\n      : {\n          type: result.body.required_action?.[\"type\"],\n          submitToolOutputs: !result.body.required_action?.submit_tool_outputs?.[\"tool_calls\"]\n            ? undefined\n            : {\n                toolCalls: result.body.required_action?.submit_tool_outputs?.tool_calls?.map(\n                  parseRequiredToolCallOutput\n                ),\n              },\n        },\n    lastError: !result.body.last_error\n      ? undefined\n      : {\n          code: result.body.last_error?.[\"code\"],\n          message: result.body.last_error?.[\"message\"],\n        },\n    model: result.body[\"model\"],\n    instructions: result.body[\"instructions\"],\n    tools: result.body[\"tools\"],\n    fileIds: result.body[\"file_ids\"],\n    metadata: result.body[\"metadata\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    expiresAt:\n      result.body[\"expires_at\"] === null ? null : unixToDate(Number(result.body[\"expires_at\"])),\n    startedAt:\n      result.body[\"started_at\"] === null ? null : unixToDate(Number(result.body[\"started_at\"])),\n    completedAt:\n      result.body[\"completed_at\"] === null ? null : unixToDate(Number(result.body[\"completed_at\"])),\n    cancelledAt:\n      result.body[\"cancelled_at\"] === null ? null : unixToDate(Number(result.body[\"cancelled_at\"])),\n    failedAt:\n      result.body[\"failed_at\"] === null ? null : unixToDate(Number(result.body[\"failed_at\"])),\n  };\n}\n\nexport async function _submitToolOutputsToRunDeserialize(\n  result: SubmitToolOutputsToRun200Response\n): Promise<ThreadRun> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    threadId: result.body[\"thread_id\"],\n    assistantId: result.body[\"assistant_id\"],\n    status: result.body[\"status\"],\n    requiredAction: !result.body.required_action\n      ? undefined\n      : {\n          type: result.body.required_action?.[\"type\"],\n          submitToolOutputs: !result.body.required_action?.submit_tool_outputs?.[\"tool_calls\"]\n            ? undefined\n            : {\n                toolCalls: result.body.required_action?.submit_tool_outputs?.tool_calls?.map(\n                  parseRequiredToolCallOutput\n                ),\n              },\n        },\n    lastError: !result.body.last_error\n      ? undefined\n      : {\n          code: result.body.last_error?.[\"code\"],\n          message: result.body.last_error?.[\"message\"],\n        },\n    model: result.body[\"model\"],\n    instructions: result.body[\"instructions\"],\n    tools: result.body[\"tools\"],\n    fileIds: result.body[\"file_ids\"],\n    metadata: result.body[\"metadata\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    expiresAt:\n      result.body[\"expires_at\"] === null ? null : unixToDate(Number(result.body[\"expires_at\"])),\n    startedAt:\n      result.body[\"started_at\"] === null ? null : unixToDate(Number(result.body[\"started_at\"])),\n    completedAt:\n      result.body[\"completed_at\"] === null ? null : unixToDate(Number(result.body[\"completed_at\"])),\n    cancelledAt:\n      result.body[\"cancelled_at\"] === null ? null : unixToDate(Number(result.body[\"cancelled_at\"])),\n    failedAt:\n      result.body[\"failed_at\"] === null ? null : unixToDate(Number(result.body[\"failed_at\"])),\n  };\n}\n\nexport async function _createThreadAndRunDeserialize(\n  result: CreateThreadAndRun200Response\n): Promise<ThreadRun> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    threadId: result.body[\"thread_id\"],\n    assistantId: result.body[\"assistant_id\"],\n    status: result.body[\"status\"],\n    requiredAction: !result.body.required_action\n      ? undefined\n      : {\n          type: result.body.required_action?.[\"type\"],\n          submitToolOutputs: !result.body.required_action?.submit_tool_outputs?.[\"tool_calls\"]\n            ? undefined\n            : {\n                toolCalls: result.body.required_action?.submit_tool_outputs?.tool_calls?.map(\n                  parseRequiredToolCallOutput\n                ),\n              },\n        },\n    lastError: !result.body.last_error\n      ? undefined\n      : {\n          code: result.body.last_error?.[\"code\"],\n          message: result.body.last_error?.[\"message\"],\n        },\n    model: result.body[\"model\"],\n    instructions: result.body[\"instructions\"],\n    tools: result.body[\"tools\"],\n    fileIds: result.body[\"file_ids\"],\n    metadata: result.body[\"metadata\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    expiresAt:\n      result.body[\"expires_at\"] === null ? null : unixToDate(Number(result.body[\"expires_at\"])),\n    startedAt:\n      result.body[\"started_at\"] === null ? null : unixToDate(Number(result.body[\"started_at\"])),\n    completedAt:\n      result.body[\"completed_at\"] === null ? null : unixToDate(Number(result.body[\"completed_at\"])),\n    cancelledAt:\n      result.body[\"cancelled_at\"] === null ? null : unixToDate(Number(result.body[\"cancelled_at\"])),\n    failedAt:\n      result.body[\"failed_at\"] === null ? null : unixToDate(Number(result.body[\"failed_at\"])),\n  };\n}\n\nexport async function _cancelRunDeserialize(result: CancelRun200Response): Promise<ThreadRun> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    threadId: result.body[\"thread_id\"],\n    assistantId: result.body[\"assistant_id\"],\n    status: result.body[\"status\"],\n    requiredAction: !result.body.required_action\n      ? undefined\n      : {\n          type: result.body.required_action?.[\"type\"],\n          submitToolOutputs: !result.body.required_action?.submit_tool_outputs?.[\"tool_calls\"]\n            ? undefined\n            : {\n                toolCalls: result.body.required_action?.submit_tool_outputs?.tool_calls?.map(\n                  parseRequiredToolCallOutput\n                ),\n              },\n        },\n    lastError: !result.body.last_error\n      ? undefined\n      : {\n          code: result.body.last_error[\"code\"],\n          message: result.body.last_error[\"message\"],\n        },\n    model: result.body[\"model\"],\n    instructions: result.body[\"instructions\"],\n    tools: result.body[\"tools\"],\n    fileIds: result.body[\"file_ids\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    expiresAt:\n      result.body[\"expires_at\"] === null ? null : unixToDate(Number(result.body[\"expires_at\"])),\n    startedAt:\n      result.body[\"started_at\"] === null ? null : unixToDate(Number(result.body[\"started_at\"])),\n    completedAt:\n      result.body[\"completed_at\"] === null ? null : unixToDate(Number(result.body[\"completed_at\"])),\n    cancelledAt:\n      result.body[\"cancelled_at\"] === null ? null : unixToDate(Number(result.body[\"cancelled_at\"])),\n    failedAt:\n      result.body[\"failed_at\"] === null ? null : unixToDate(Number(result.body[\"failed_at\"])),\n    metadata: result.body[\"metadata\"],\n  };\n}\n\nexport async function listMessages(\n  context: Client,\n  threadId: string,\n  options: ListMessagesOptions = { requestOptions: {} }\n): Promise<ListResponseOf<ThreadMessage>> {\n  const result = await _listMessagesSend(context, threadId, options);\n  return _listMessagesDeserialize(result);\n}\n\nexport function _getMessageSend(\n  context: Client,\n  threadId: string,\n  messageId: string,\n  options: GetMessageOptions = { requestOptions: {} }\n): StreamableMethod<GetMessage200Response> {\n  return context\n    .path(\"/threads/{threadId}/messages/{messageId}\", threadId, messageId)\n    .get({ ...operationOptionsToRequestParameters(options) });\n}\n\n/** Retrieves a message associated with a thread. */\nexport async function getMessage(\n  context: Client,\n  threadId: string,\n  messageId: string,\n  options: GetMessageOptions = { requestOptions: {} }\n): Promise<ThreadMessage> {\n  const result = await _getMessageSend(context, threadId, messageId, options);\n  return _getMessageDeserialize(result);\n}\n\nexport async function _listMessageFilesDeserialize(\n  result: ListMessageFiles200Response\n): Promise<ListResponseOf<MessageFile>> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    data: result.body[\"data\"].map((p) => ({\n      id: p[\"id\"],\n      createdAt: unixToDate(p[\"created_at\"]),\n      messageId: p[\"message_id\"],\n    })),\n    firstId: result.body[\"first_id\"],\n    lastId: result.body[\"last_id\"],\n    hasMore: result.body[\"has_more\"],\n  };\n}\n\n/** Returns a list of files associated with a message from a thread. */\nexport async function listMessageFiles(\n  context: Client,\n  threadId: string,\n  messageId: string,\n  options: ListMessageFilesOptions = { requestOptions: {} }\n): Promise<ListResponseOf<MessageFile>> {\n  const result = await _listMessageFilesSend(context, threadId, messageId, options);\n  return _listMessageFilesDeserialize(result);\n}\n\nexport async function _createMessageDeserialize(\n  result: CreateMessage200Response\n): Promise<ThreadMessage> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    threadId: result.body[\"thread_id\"],\n    role: result.body[\"role\"],\n    content: (result.body[\"content\"] ?? []).map(parseMessageContentOutput),\n    assistantId: result.body[\"assistant_id\"],\n    runId: result.body[\"run_id\"],\n    fileIds: result.body[\"file_ids\"],\n    metadata: result.body[\"metadata\"],\n  };\n}\n\nexport async function _listMessagesDeserialize(\n  result: ListMessages200Response\n): Promise<ListResponseOf<ThreadMessage>> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    data: (result.body[\"data\"] ?? []).map((p) => ({\n      id: p[\"id\"],\n      createdAt: unixToDate(p[\"created_at\"]),\n      threadId: p[\"thread_id\"],\n      role: p[\"role\"],\n      content: (p[\"content\"] ?? []).map(parseMessageContentOutput),\n      assistantId: p[\"assistant_id\"],\n      runId: p[\"run_id\"],\n      metadata: p[\"metadata\"],\n    })),\n    firstId: result.body[\"first_id\"],\n    lastId: result.body[\"last_id\"],\n    hasMore: result.body[\"has_more\"],\n  };\n}\n\nexport async function _getMessageDeserialize(\n  result: GetMessage200Response\n): Promise<ThreadMessage> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    threadId: result.body[\"thread_id\"],\n    role: result.body[\"role\"],\n    content: (result.body[\"content\"] ?? []).map(parseMessageContentOutput),\n    assistantId: result.body[\"assistant_id\"],\n    runId: result.body[\"run_id\"],\n    metadata: result.body[\"metadata\"],\n  };\n}\n\nexport async function _updateMessageDeserialize(\n  result: UpdateMessage200Response\n): Promise<ThreadMessage> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    threadId: result.body[\"thread_id\"],\n    role: result.body[\"role\"],\n    content: (result.body[\"content\"] ?? []).map(parseMessageContentOutput),\n    assistantId: result.body[\"assistant_id\"],\n    runId: result.body[\"run_id\"],\n    metadata: result.body[\"metadata\"],\n  };\n}\n\nexport async function _listRunStepsDeserialize(\n  result: ListRunSteps200Response\n): Promise<ListResponseOf<RunStep>> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    data: result.body[\"data\"].map(parseRunStepOutput),\n    firstId: result.body[\"first_id\"],\n    lastId: result.body[\"last_id\"],\n    hasMore: result.body[\"has_more\"],\n  };\n}\n\nexport async function _getRunStepDeserialize(result: GetRunStep200Response): Promise<RunStep> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  const {\n    step_details,\n    last_error,\n    created_at,\n    expired_at,\n    completed_at,\n    cancelled_at,\n    failed_at,\n    ...rest\n  } = result.body;\n  return {\n    ...camelCaseKeys(rest),\n    stepDetails: parseRunStepDetails(step_details),\n    lastError:\n      last_error === null\n        ? null\n        : {\n            code: last_error[\"code\"],\n            message: last_error[\"message\"],\n          },\n    createdAt: unixToDate(created_at),\n    expiredAt: expired_at === null ? null : unixToDate(Number(expired_at)),\n    completedAt: completed_at === null ? null : unixToDate(Number(completed_at)),\n    cancelledAt: cancelled_at === null ? null : unixToDate(Number(cancelled_at)),\n    failedAt: failed_at === null ? null : unixToDate(Number(failed_at)),\n  };\n}\n\n/** Returns a list of run steps associated an assistant thread run. */\nexport async function listRunSteps(\n  context: Client,\n  threadId: string,\n  runId: string,\n  options: ListRunStepsOptions = { requestOptions: {} }\n): Promise<ListResponseOf<RunStep>> {\n  const result = await _listRunStepsSend(context, threadId, runId, options);\n  return _listRunStepsDeserialize(result);\n}\n\nexport async function _listAssistantsDeserialize(\n  result: ListAssistants200Response\n): Promise<ListResponseOf<Assistant>> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    data: result.body[\"data\"].map((p) => ({\n      id: p[\"id\"],\n      createdAt: unixToDate(p[\"created_at\"]),\n      name: p[\"name\"],\n      description: p[\"description\"],\n      model: p[\"model\"],\n      instructions: p[\"instructions\"],\n      tools: p[\"tools\"],\n      fileIds: p[\"file_ids\"],\n      metadata: p[\"metadata\"],\n    })),\n    firstId: result.body[\"first_id\"],\n    lastId: result.body[\"last_id\"],\n    hasMore: result.body[\"has_more\"],\n  };\n}\n\n/** Returns a list of assistants. */\nexport async function listAssistants(\n  context: Client,\n  options: ListAssistantsOptions = { requestOptions: {} }\n): Promise<ListResponseOf<Assistant>> {\n  const result = await _listAssistantsSend(context, options);\n  return _listAssistantsDeserialize(result);\n}\n\nexport async function _listAssistantFilesDeserialize(\n  result: ListAssistantFiles200Response\n): Promise<ListResponseOf<AssistantFile>> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    data: result.body[\"data\"].map((p) => ({\n      id: p[\"id\"],\n      createdAt: unixToDate(p[\"created_at\"]),\n      assistantId: p[\"assistant_id\"],\n    })),\n    firstId: result.body[\"first_id\"],\n    lastId: result.body[\"last_id\"],\n    hasMore: result.body[\"has_more\"],\n  };\n}\n\n/** Returns a list of assistant files. */\nexport async function listAssistantFiles(\n  context: Client,\n  assistantId: string,\n  options: ListAssistantFilesOptions = { requestOptions: {} }\n): Promise<ListResponseOf<AssistantFile>> {\n  const result = await _listAssistantFilesSend(context, assistantId, options);\n  return _listAssistantFilesDeserialize(result);\n}\n\nexport function _createThreadSend(\n  context: Client,\n  body: AssistantThreadCreationOptions,\n  options: CreateThreadOptions = { requestOptions: {} }\n): StreamableMethod<CreateThread200Response> {\n  return context.path(\"/threads\").post({\n    ...operationOptionsToRequestParameters(options),\n    body: {\n      messages: (body[\"messages\"] ?? []).map((p) => ({\n        role: p[\"role\"],\n        content: p[\"content\"],\n      })),\n      metadata: body[\"metadata\"],\n    },\n  });\n}\n\nexport function _uploadFileSend(\n  context: Client,\n  file: Uint8Array,\n  purpose: FilePurpose,\n  options: UploadFileOptions = { requestOptions: {} }\n): StreamableMethod<UploadFile200Response> {\n  return context.path(\"/files\").post({\n    ...operationOptionsToRequestParameters(options),\n    contentType: (options.contentType as any) ?? \"multipart/form-data\",\n    body: {\n      file: createFile(file, options?.filename || \"unknown.txt\"),\n      purpose: purpose,\n    },\n  });\n}\n\nexport async function _uploadFileDeserialize(result: UploadFile200Response): Promise<InputFile> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    bytes: result.body[\"bytes\"],\n    filename: result.body[\"filename\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    purpose: result.body[\"purpose\"],\n  };\n}\n\nexport async function _getFileDeserialize(result: GetFile200Response): Promise<InputFile> {\n  if (result.status !== \"200\") {\n    throw createRestError(result);\n  }\n\n  return {\n    id: result.body[\"id\"],\n    bytes: result.body[\"bytes\"],\n    filename: result.body[\"filename\"],\n    createdAt: unixToDate(result.body[\"created_at\"]),\n    purpose: result.body[\"purpose\"],\n  };\n}\n\nfunction parseMessageContentOutput(messageContentOutput: MessageContentOutput): MessageContent {\n  const messageContent = { type: \"\", text: {}, imageFile: {} };\n  switch (messageContentOutput.type) {\n    case \"image_file\":\n      messageContent.type = \"image_file\";\n      messageContent.imageFile = messageContentOutput.image_file;\n      break;\n    case \"text\":\n      messageContent.type = \"text\";\n      messageContent.text = messageContentOutput.text;\n      break;\n  }\n\n  return messageContent as unknown as MessageContent;\n}\n\nfunction parseRunStepDetails(runStepDetailsOutput: RunStepDetailsOutput): RunStepDetails {\n  const { type } = runStepDetailsOutput;\n  const details = { type, messageCreation: {}, toolCalls: [] as ToolCall[] };\n  switch (type) {\n    case \"message_creation\":\n      details.messageCreation = runStepDetailsOutput[\"message_creation\"];\n      break;\n    case \"tool_calls\":\n      details.toolCalls = runStepDetailsOutput[\"tool_calls\"].map(parseToolCallOutput);\n      break;\n  }\n\n  return details as RunStepDetails;\n}\n\nfunction parseRunStepOutput(runStepOutput: RunStepOutput): RunStep {\n  const {\n    step_details,\n    last_error,\n    created_at,\n    expired_at,\n    completed_at,\n    cancelled_at,\n    failed_at,\n    ...rest\n  } = runStepOutput;\n  return {\n    ...camelCaseKeys(rest),\n    stepDetails: parseRunStepDetails(step_details),\n    lastError:\n      last_error === null ? null : { code: last_error[\"code\"], message: last_error[\"message\"] },\n    createdAt: unixToDate(created_at),\n    expiredAt: expired_at === null ? null : unixToDate(Number(expired_at)),\n    completedAt: completed_at === null ? null : unixToDate(Number(completed_at)),\n    cancelledAt: cancelled_at === null ? null : unixToDate(Number(cancelled_at)),\n    failedAt: failed_at === null ? null : unixToDate(Number(failed_at)),\n  } as RunStep;\n}\n"]}